-- Edit mode -*- lua -*-

define_mode("edit", ship.editor.textinput, ship.editor.wrap)

-- most of the functions these are bound to should be self-explanatory
-- just by looking at the function name.

bind("edit", "escape", function()
        ship.editor.save()
        ship.editor.change_buffer(nil) -- nil buffer means flight mode
end)

bind("edit", "ctrl-q", ship.ui.quit)

-- cycle forwards and backwards through open buffers
bind("edit", "ctrl-pageup", lume.fn(ship.editor.next_buffer, -1))
bind("edit", "appback", lume.fn(ship.editor.next_buffer, -1))
bind("edit", "ctrl-pagedown", ship.editor.next_buffer)
bind("edit", "appforward", ship.editor.next_buffer)

bind("edit", "pause", function() ship.paused = (not ship.paused) end)

-- you can bind return to just ship.editor.newline to disable auto-indent
bind("edit", "return", ship.editor.newline_and_indent)
bind("edit", "ctrl-z", ship.editor.undo)
bind("edit", "ctrl-r", ship.editor.revert)

-- "Conventional" keys
bind("edit", "backspace", ship.editor.delete_backwards)
bind("edit", "delete", ship.editor.delete_forwards)

bind("edit", "home", ship.editor.beginning_of_line)
bind("edit", "end", ship.editor.end_of_line)
bind("edit", "left", ship.editor.backward_char)
bind("edit", "right", ship.editor.forward_char)
bind("edit", "up", ship.editor.prev_line)
bind("edit", "down", ship.editor.next_line)

bind("edit", "ctrl- ", ship.editor.mark)
bind("edit", "ctrl-c", ship.editor.kill_ring_save)
bind("edit", "ctrl-x", ship.editor.kill_region)
bind("edit", "ctrl-v", ship.editor.yank)

bind("edit", "pageup", ship.editor.scroll_up)
bind("edit", "pagedown", ship.editor.scroll_down)

-- insert a page-break, rendered as a horizontal line
bind("edit", "ctrl-l", function()
        ship.editor.newline()
        ship.editor.textinput("\f")
        ship.editor.newline()
end)

bind("edit", "alt-w", ship.editor.close)
bind("edit", "ctrl-alt-w", lume.fn(ship.editor.close, true))

-- comment this out to disable Emacs key bindings
dofile("src.emacs")
